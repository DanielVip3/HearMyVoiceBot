const constants = require('../constants.js');
const client = constants.client;
const audioStreamPerGuild = constants.audioStreamPerGuild;
const voiceChannelPerGuild = constants.voiceChannelPerGuild;

const embeds = require("../utils/embeds.js");

client.on('voiceStateUpdate', async(oldState, newState) => {
	/* If oldState and newState channels are equal, means that the user didn't leave any channel but just muted/unmuted, so we check that they aren't equal */
	if (oldState && oldState.channelID && oldState.channelID !== newState.channelID) {

		if (newState.member.user.bot) return;

		let member = newState.member;

		/* If the user left a voice recording channel(generated by bot), this event should not be called and so return */
		if (voiceChannelPerGuild[oldState.guild.id] && oldState.channelID === voiceChannelPerGuild[oldState.guild.id]['voice_channel_id']) return;

		/* If recorder is saved in the audioStreamPerGuild. This should confirm that the recording was started */
		if (audioStreamPerGuild[member.guild.id] && audioStreamPerGuild[member.guild.id].recorder) {
			
			let recorder = audioStreamPerGuild[member.guild.id].recorder;
			let userId = audioStreamPerGuild[member.guild.id].author_id;

			/* If recorder is recording and the one who left the channel is the same who started recording */
			if (recorder.getIsRecording() && userId === member.user.id) {
				/* Tell to the user that he left mid-recording */
				member.user.send({
					embed: embeds.leftMidRecording(member.user)
				});

				/* Leave voice channel */
				member.guild.me.voice.channel.leave();

				audioStreamPerGuild[member.guild.id] = null;
				voiceChannelPerGuild[member.guild.id] = null;
			}
		}
	}
});
